{
  "name": "wealthforge-backend",
  "version": "2.0.0",
  "description": "WealthForge Digital Wealth Management Backend",
  "main": "dist/server.js",
  "scripts": {
    "dev": "tsx watch src/server.ts",
    "build": "tsc",
    "start": "node dist/server.js",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:full-stack": "tsx src/__tests__/testRunner.ts",
    "test:phase6": "tsx src/__tests__/runPhase6Tests.ts",
    "test:health": "tsx src/__tests__/testRunner.ts health",
    "test:database": "tsx src/__tests__/testRunner.ts database",
    "test:backend": "tsx src/__tests__/testRunner.ts backend",
    "test:frontend": "tsx src/__tests__/testRunner.ts frontend",
    "test:integration": "tsx src/__tests__/testRunner.ts integration",
    "test:e2e": "tsx src/__tests__/testRunner.ts e2e",
    "test:performance": "tsx src/__tests__/testRunner.ts performance",
    "test:security": "tsx src/__tests__/testRunner.ts security",
    "test:p0": "tsx -e \"import { Phase6TestScenarios } from './src/__tests__/phase6TestScenarios'; const config = { frontend: { baseUrl: process.env.FRONTEND_URL || 'http://localhost:3000' }, backend: { baseUrl: process.env.BACKEND_URL || 'http://localhost:8080' }, database: { host: process.env.DB_HOST || 'localhost', port: parseInt(process.env.DB_PORT || '3307'), user: process.env.DB_USER || 'root', password: process.env.DB_PASSWORD || 'password', database: process.env.DB_NAME || 'grip_invest' } }; const scenarios = new Phase6TestScenarios(config); scenarios.runP0CriticalTests().then(r => { console.log('P0 Results:', r); process.exit(r.allPassed ? 0 : 1); });\"",
    "test:p1": "tsx -e \"import { Phase6TestScenarios } from './src/__tests__/phase6TestScenarios'; const config = { frontend: { baseUrl: process.env.FRONTEND_URL || 'http://localhost:3000' }, backend: { baseUrl: process.env.BACKEND_URL || 'http://localhost:8080' }, database: { host: process.env.DB_HOST || 'localhost', port: parseInt(process.env.DB_PORT || '3307'), user: process.env.DB_USER || 'root', password: process.env.DB_PASSWORD || 'password', database: process.env.DB_NAME || 'grip_invest' } }; const scenarios = new Phase6TestScenarios(config); scenarios.runP1ImportantTests().then(r => { console.log('P1 Results:', r); process.exit(r.allPassed ? 0 : 1); });\"",
    "test:performance-only": "tsx -e \"import { GripInvestPerformanceTester } from './src/__tests__/performanceTester'; const config = { frontend: { baseUrl: process.env.FRONTEND_URL || 'http://localhost:3000' }, backend: { baseUrl: process.env.BACKEND_URL || 'http://localhost:8080' }, database: { host: process.env.DB_HOST || 'localhost', port: parseInt(process.env.DB_PORT || '3307'), user: process.env.DB_USER || 'root', password: process.env.DB_PASSWORD || 'password', database: process.env.DB_NAME || 'grip_invest' } }; const tester = new GripInvestPerformanceTester(config); tester.runPerformanceTests().then(r => { console.log('Performance Results:', r); process.exit(0); });\"",
    "test:security-only": "tsx -e \"import { GripInvestSecurityTester } from './src/__tests__/securityTester'; const config = { frontend: { baseUrl: process.env.FRONTEND_URL || 'http://localhost:3000' }, backend: { baseUrl: process.env.BACKEND_URL || 'http://localhost:8080' }, database: { host: process.env.DB_HOST || 'localhost', port: parseInt(process.env.DB_PORT || '3307'), user: process.env.DB_USER || 'root', password: process.env.DB_PASSWORD || 'password', database: process.env.DB_NAME || 'grip_invest' } }; const tester = new GripInvestSecurityTester(config); tester.runSecurityTests().then(r => { console.log('Security Results:', r); process.exit(0); });\"",
    "lint": "eslint src --ext .ts",
    "lint:fix": "eslint src --ext .ts --fix",
    "format": "prettier --write src/**/*.ts",
    "db:generate": "prisma generate",
    "db:migrate": "prisma migrate dev",
    "db:deploy": "prisma migrate deploy",
    "db:seed": "tsx src/prisma/seed.ts",
    "db:studio": "prisma studio",
    "smoke": "node ../smoke-tests.js"
  },
  "dependencies": {
    "@playwright/test": "^1.55.0",
    "@prisma/client": "^5.7.1",
    "axios": "^1.12.2",
    "bcrypt": "^5.1.1",
    "cookie-parser": "^1.4.6",
    "cors": "^2.8.5",
    "dotenv": "^16.3.1",
    "express": "^4.18.2",
    "express-rate-limit": "^7.1.5",
    "helmet": "^7.1.0",
    "jsonwebtoken": "^9.0.2",
    "mysql2": "^3.15.0",
    "uuid": "^9.0.1",
    "zod": "^3.22.4"
  },
  "devDependencies": {
    "@types/bcrypt": "^5.0.2",
    "@types/cookie-parser": "^1.4.6",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/jest": "^29.5.8",
    "@types/jsonwebtoken": "^9.0.5",
    "@types/node": "^20.9.0",
    "@types/supertest": "^2.0.16",
    "@types/uuid": "^9.0.7",
    "@typescript-eslint/eslint-plugin": "^6.12.0",
    "@typescript-eslint/parser": "^6.12.0",
    "eslint": "^8.54.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.1",
    "jest": "^29.7.0",
    "playwright": "^1.55.0",
    "prettier": "^3.1.0",
    "prisma": "^5.7.1",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.1",
    "tsx": "^4.6.0",
    "typescript": "^5.2.2"
  },
  "engines": {
    "node": ">=20.0.0"
  },
  "prisma": {
    "seed": "tsx src/prisma/seed.ts"
  }
}
